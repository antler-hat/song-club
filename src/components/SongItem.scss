@use '../globals';

$button-size: 30px;

.songItem {
    padding: var(--spacing-xs) var(--spacing-base);
    border-bottom: 1px solid var(--grey-lightest);
    position: relative;
    font-size: var(--font-size-sm);
    border-radius: var(--radius);

    &:focus {
        outline: none;
    }

    @media (hover: hover) and (pointer: fine) {
        &:hover .playpause-button svg {
            fill: currentColor
        }

        &:hover {
            background: var(--near-white);
            cursor: default;
        }
    }

    &.is-selected {
        background: var(--grey-lightest);
    }

    &-titleGroup {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-sm);
        align-items: baseline;
    }

    &-mainContent {
        display: grid;
        grid-template-columns: $button-size 1fr 150px;
        gap: var(--spacing-base);
        position: relative;

        @media screen and (max-width: globals.$screen-mobile-max) {
            align-items: start;
            grid-template-columns: $button-size 1fr auto;
        }
    }

    &-mainDetails {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        align-items: center;
        gap: var(--spacing-base);

        @media screen and (max-width: globals.$screen-mobile-max) {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 0;
        }
    }


    &-tableHeader {
        display: grid;
        grid-template-columns: $button-size 2fr 1fr 1fr 150px;
        align-items: center;
        padding: var(--spacing-base);
        border-bottom: 1px solid var(--grey-lightest);
        position: relative;
        font-size: var(--font-size-sm);
        gap: var(--spacing-base);

        &>span:first-child {
            grid-column-start: 2;
        }
    }

    &-tableHeader {
        @media screen and (max-width: globals.$screen-mobile-max) {
            display: none;
        }
    }

    &-songTitle {
        margin-bottom: 0;
        font-weight: 500;
        display: inline;
    }

    &-username {
        display: inline;
    }

    &-theme {
        @media screen and (max-width: globals.$screen-mobile-max) {
            margin-top: var(--spacing-xs);
        }
    }

    &-themeLink {
        font-size: var(--font-size-sm);
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    @media screen and (max-width: globals.$screen-mobile-max) {
        color: var(--grey-base);
        font-size: var(--font-size-xs);
    }

    &-lyricsButton {
        display: flex;
        gap: var(--spacing-xs);
        align-items: center;
        margin-top: var(--spacing-xs);
    }

    &-actions {
        display: grid;
        grid-template-columns: 1fr 50px;
        gap: var(--spacing-base);
        align-items: center;
        justify-content: end;

        @media screen and (max-width: globals.$screen-mobile-max) {
            display: flex;
            gap: var(--spacing-sm);
        }
    }

    &-playpause {
        display: flex;
        align-items: center;
    }

    &-skeleton {
        display: grid;
        gap: var(--spacing-base);
        grid-template-columns: $button-size 2fr 1fr 1fr 150px;
        align-items: center;
        padding: var(--spacing-base);
        border-bottom: 1px solid var(--grey-lightest);
    }

    // &-commentsContainer {
    //     margin-bottom: var(--spacing-xs);
    //     display: flex;
    //     flex-direction: column;
    //     gap: var(--spacing-xs);
    //     font-size: var(--font-size-sm);
    // }

    // &-commentSection {
    //     display: flex;
    //     flex-direction: column;
    //     gap: var(--spacing-xs);
    //     align-items: start;
    // }

    button.playpause-button {
        width: $button-size;
        height: $button-size;
        border-radius: 50px;
        background-color: transparent;
        color: var(--black);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;

        &:focus,
        &:focus-visible {
            outline: 2px dashed var(--grey-lighter);
            outline-offset: 0;
        }

        &.is-paused svg {
            fill: currentColor;
        }
    }
}